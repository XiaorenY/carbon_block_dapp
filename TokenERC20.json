{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/TokenERC.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenERC.sol",
    "exportedSymbols": {
      "TokenERC20": [
        395
      ],
      "tokenRecipient": [
        13
      ]
    },
    "id": 396,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 13,
        "linearizedBaseContracts": [
          13
        ],
        "name": "tokenRecipient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "8f4ffcb1",
            "id": 12,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "82:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "82:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "97:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "97:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "113:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "113:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "129:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "129:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "81:74:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:0:0"
            },
            "scope": 13,
            "src": "57:108:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 396,
        "src": "25:143:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 395,
        "linearizedBaseContracts": [
          395
        ],
        "name": "TokenERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 15,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 395,
            "src": "233:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 14,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "233:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 17,
            "mutability": "mutable",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 395,
            "src": "257:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "257:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 20,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 395,
            "src": "283:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 18,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "283:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "307:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 22,
            "mutability": "mutable",
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 395,
            "src": "387:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "387:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70a08231",
            "id": 26,
            "mutability": "mutable",
            "name": "balanceOf",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 395,
            "src": "467:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "476:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "467:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 24,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "487:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd62ed3e",
            "id": 32,
            "mutability": "mutable",
            "name": "allowance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 395,
            "src": "518:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "527:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "518:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 30,
                "keyType": {
                  "id": 28,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "547:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "538:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 29,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "558:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 40,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 40,
                  "src": "686:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 40,
                  "src": "708:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 40,
                  "src": "728:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "685:57:0"
            },
            "src": "671:72:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 48,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 48,
                  "src": "848:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 48,
                  "src": "872:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 48,
                  "src": "898:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "847:66:0"
            },
            "src": "833:81:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 54,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "983:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 54,
                  "src": "1005:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "982:37:0"
            },
            "src": "972:48:0"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1287:413:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 64,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1297:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1311:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1327:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 69,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "1341:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1333:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 67,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1333:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1333:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1327:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1311:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1297:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 75,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1408:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 78,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1418:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1418:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1408:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1432:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1408:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1408:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1507:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1514:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1507:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1604:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "1613:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1604:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:20:0"
                }
              ]
            },
            "documentation": {
              "id": 55,
              "nodeType": "StructuredDocumentation",
              "src": "1026:132:0",
              "text": " Constructor function\n Initializes contract with initial supply tokens to the creator of the contract"
            },
            "id": 91,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "1184:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "1215:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "1248:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1174:105:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:0:0"
            },
            "scope": 395,
            "src": "1163:537:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1853:767:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 102,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "1934:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1949:3:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1941:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1941:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1941:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1934:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1926:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1926:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1926:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 111,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2014:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 113,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "2024:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2014:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2034:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2014:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2006:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 119,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "2090:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 121,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 120,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "2100:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2090:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "2107:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2090:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 124,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2117:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 126,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "2127:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2117:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2090:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2082:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2082:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2082:50:0"
                },
                {
                  "assignments": [
                    131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 131,
                      "mutability": "mutable",
                      "name": "previousBalances",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 170,
                      "src": "2194:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 130,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2194:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2218:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 134,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2228:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2218:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2237:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 137,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2247:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2237:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2218:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2194:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2297:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2307:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2297:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2317:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2297:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2297:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2374:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 148,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2384:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2374:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 149,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2392:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2374:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2374:24:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2422:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2429:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "2434:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 152,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "2413:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "EmitStatement",
                  "src": "2408:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 159,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "2559:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 161,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 160,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2569:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2559:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 162,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "2578:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 164,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 163,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "2588:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2578:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2559:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "previousBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "2596:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2559:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 158,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2552:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2552:61:0"
                }
              ]
            },
            "documentation": {
              "id": 92,
              "nodeType": "StructuredDocumentation",
              "src": "1706:73:0",
              "text": " Internal transfer, only can be called by this contract"
            },
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "1803:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "1818:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "1831:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1802:41:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1853:0:0"
            },
            "scope": 395,
            "src": "1784:836:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "2898:72:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2918:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2918:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "2930:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "2935:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 181,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "2908:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2908:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "2908:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2959:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 180,
                  "id": 189,
                  "nodeType": "Return",
                  "src": "2952:11:0"
                }
              ]
            },
            "documentation": {
              "id": 172,
              "nodeType": "StructuredDocumentation",
              "src": "2626:190:0",
              "text": " Transfer tokens\n Send `_value` tokens to `_to` from your account\n @param _to The address of the recipient\n @param _value the amount to send"
            },
            "functionSelector": "a9059cbb",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 191,
                  "src": "2839:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2839:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 191,
                  "src": "2852:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2838:29:0"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 191,
                  "src": "2884:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2883:14:0"
            },
            "scope": 395,
            "src": "2821:149:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "3335:195:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 204,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "3353:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 205,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "3363:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 207,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 206,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "3373:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3363:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 210,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 208,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3380:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3380:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3363:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3353:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3345:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3345:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "3345:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "3425:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 218,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 215,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "3435:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3425:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 219,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3442:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3442:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3425:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "3457:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3425:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3425:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "3483:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "3490:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 226,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "3495:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 223,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "3473:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3519:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 202,
                  "id": 230,
                  "nodeType": "Return",
                  "src": "3512:11:0"
                }
              ]
            },
            "documentation": {
              "id": 192,
              "nodeType": "StructuredDocumentation",
              "src": "2976:258:0",
              "text": " Transfer tokens from other address\n Send `_value` tokens to `_to` on behalf of `_from`\n @param _from The address of the sender\n @param _to The address of the recipient\n @param _value the amount to send"
            },
            "functionSelector": "23b872dd",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 232,
                  "src": "3261:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3261:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 232,
                  "src": "3276:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3276:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 232,
                  "src": "3289:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3260:44:0"
            },
            "returnParameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 232,
                  "src": "3321:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3321:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3320:14:0"
            },
            "scope": 395,
            "src": "3239:291:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "3878:131:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 242,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "3888:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 246,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 243,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3898:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3898:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3888:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 247,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3910:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3888:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 248,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "3922:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3888:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "3888:40:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3952:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3952:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 254,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3964:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 255,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "3974:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 251,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3943:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3943:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "EmitStatement",
                  "src": "3938:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3998:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 241,
                  "id": 259,
                  "nodeType": "Return",
                  "src": "3991:11:0"
                }
              ]
            },
            "documentation": {
              "id": 233,
              "nodeType": "StructuredDocumentation",
              "src": "3536:248:0",
              "text": " Set allowance for other address\n Allows `_spender` to spend no more than `_value` tokens on your behalf\n @param _spender The address authorized to spend\n @param _value the max amount they can spend"
            },
            "functionSelector": "095ea7b3",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "3806:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3806:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "3824:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3824:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3805:34:0"
            },
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "3864:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3864:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3863:14:0"
            },
            "scope": 395,
            "src": "3789:220:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "4526:226:0",
              "statements": [
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 300,
                      "src": "4536:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_tokenRecipient_$13",
                        "typeString": "contract tokenRecipient"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 273,
                        "name": "tokenRecipient",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13,
                        "src": "4536:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_tokenRecipient_$13",
                          "typeString": "contract tokenRecipient"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 278,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 276,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "4576:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 275,
                      "name": "tokenRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "4561:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_tokenRecipient_$13_$",
                        "typeString": "type(contract tokenRecipient)"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4561:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_tokenRecipient_$13",
                      "typeString": "contract tokenRecipient"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4536:49:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 280,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "4607:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "4617:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 279,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "4599:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4599:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 299,
                  "nodeType": "IfStatement",
                  "src": "4595:151:0",
                  "trueBody": {
                    "id": 298,
                    "nodeType": "Block",
                    "src": "4626:120:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 286,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4664:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4664:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 288,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "4676:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 291,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4692:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenERC20_$395",
                                    "typeString": "contract TokenERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenERC20_$395",
                                    "typeString": "contract TokenERC20"
                                  }
                                ],
                                "id": 290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4684:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 289,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4684:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4684:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 293,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "4699:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 283,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "4640:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_tokenRecipient_$13",
                                "typeString": "contract tokenRecipient"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiveApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "4640:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address,bytes memory) external"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4640:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 295,
                        "nodeType": "ExpressionStatement",
                        "src": "4640:70:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4731:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 272,
                        "id": 297,
                        "nodeType": "Return",
                        "src": "4724:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 262,
              "nodeType": "StructuredDocumentation",
              "src": "4015:377:0",
              "text": " Set allowance for other address and notify\n Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\n @param _spender The address authorized to spend\n @param _value the max amount they can spend\n @param _extraData some extra information to send to the approved contract"
            },
            "functionSelector": "cae9ca51",
            "id": 301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveAndCall",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 301,
                  "src": "4421:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4421:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 301,
                  "src": "4439:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4439:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 301,
                  "src": "4455:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4455:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4420:59:0"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 301,
                  "src": "4512:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4512:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4511:14:0"
            },
            "scope": 395,
            "src": "4397:355:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "4978:308:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 310,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "4996:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 313,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 311,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5006:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5006:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4996:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 314,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "5021:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4996:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4988:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4988:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "4988:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 318,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "5074:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 321,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 319,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5084:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5084:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5074:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 322,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "5099:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5074:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "5074:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 325,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "5154:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 326,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "5169:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5154:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "5154:21:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 330,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5239:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5239:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 332,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "5251:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 329,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "5234:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5234:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "EmitStatement",
                  "src": "5229:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5275:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 308,
                  "id": 336,
                  "nodeType": "Return",
                  "src": "5268:11:0"
                }
              ]
            },
            "documentation": {
              "id": 302,
              "nodeType": "StructuredDocumentation",
              "src": "4758:155:0",
              "text": " Destroy tokens\n Remove `_value` tokens from the system irreversibly\n @param _value the amount of money to burn"
            },
            "functionSelector": "42966c68",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 338,
                  "src": "4932:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4932:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4931:16:0"
            },
            "returnParameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 338,
                  "src": "4964:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4964:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4963:14:0"
            },
            "scope": 395,
            "src": "4918:368:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "5618:524:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 349,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "5636:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 351,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 350,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "5646:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5636:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 343,
                          "src": "5656:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5636:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5628:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5628:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "5628:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 357,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 343,
                          "src": "5739:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 358,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "5749:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 360,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 359,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "5759:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5749:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 363,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 361,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5766:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5766:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5749:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5739:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5731:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "5731:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "5810:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 369,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 368,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "5820:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5810:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 370,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "5830:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5810:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "5810:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 373,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "5908:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 377,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 374,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "5918:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5908:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 378,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 375,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5925:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5925:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5908:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "5940:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5908:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "5908:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 382,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "6008:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 383,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "6023:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6008:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "6008:21:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 387,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6100:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "6107:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 386,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "6095:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6095:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 390,
                  "nodeType": "EmitStatement",
                  "src": "6090:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6131:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 347,
                  "id": 392,
                  "nodeType": "Return",
                  "src": "6124:11:0"
                }
              ]
            },
            "documentation": {
              "id": 339,
              "nodeType": "StructuredDocumentation",
              "src": "5292:242:0",
              "text": " Destroy tokens from other account\n Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n @param _from the address of the sender\n @param _value the amount of money to burn"
            },
            "functionSelector": "79cc6790",
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 394,
                  "src": "5557:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5557:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 394,
                  "src": "5572:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5572:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5556:31:0"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 394,
                  "src": "5604:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5604:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5603:14:0"
            },
            "scope": 395,
            "src": "5539:603:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 396,
        "src": "170:5974:0"
      }
    ],
    "src": "0:6144:0"
  },
  "bytecode": "60806040526002805460ff191660121790553480156200001e57600080fd5b5060405162000bca38038062000bca833981810160405260608110156200004457600080fd5b8151602083018051604051929492938301929190846401000000008211156200006c57600080fd5b9083019060208201858111156200008257600080fd5b82516401000000008111828201881017156200009d57600080fd5b82525081516020918201929091019080838360005b83811015620000cc578181015183820152602001620000b2565b50505050905090810190601f168015620000fa5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011e57600080fd5b9083019060208201858111156200013457600080fd5b82516401000000008111828201881017156200014f57600080fd5b82525081516020918201929091019080838360005b838110156200017e57818101518382015260200162000164565b50505050905090810190601f168015620001ac5780820380516001836020036101000a031916815260200191505b50604090815260025460ff16600a0a8702600381905533600090815260046020908152928120919091558651620001ec955090935090860191506200020c565b508051620002029060019060208401906200020c565b50505050620002a8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024f57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027f57825182559160200191906001019062000262565b506200028d92915062000291565b5090565b5b808211156200028d576000815560010162000292565b61091280620002b86000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461020157806379cc67901461022757806395d89b4114610253578063a9059cbb1461025b578063cae9ca5114610287578063dd62ed3e14610342576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806342966c68146101e4575b600080fd5b6100c1610370565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b0381351690602001356103fe565b604080519115158252519081900360200190f35b61017e610464565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561046a565b6101ce6104da565b6040805160ff9092168252519081900360200190f35b610162600480360360208110156101fa57600080fd5b50356104e3565b61017e6004803603602081101561021757600080fd5b50356001600160a01b031661055b565b6101626004803603604081101561023d57600080fd5b506001600160a01b03813516906020013561056d565b6100c161063e565b6101626004803603604081101561027157600080fd5b506001600160a01b038135169060200135610698565b6101626004803603606081101561029d57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156102cd57600080fd5b8201836020820111156102df57600080fd5b8035906020019184600183028401116401000000008311171561030157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106ae945050505050565b61017e6004803603604081101561035857600080fd5b506001600160a01b03813581169160200135166107bc565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60035481565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561049a57600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020805483900390556104cf8484846107d9565b5060015b9392505050565b60025460ff1681565b336000908152600460205260408120548211156104ff57600080fd5b3360008181526004602090815260409182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b60046020526000908152604090205481565b6001600160a01b03821660009081526004602052604081205482111561059257600080fd5b6001600160a01b03831660009081526005602090815260408083203384529091529020548211156105c257600080fd5b6001600160a01b0383166000818152600460209081526040808320805487900390556005825280832033845282529182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250600192915050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f65780601f106103cb576101008083540402835291602001916103f6565b60006106a53384846107d9565b50600192915050565b6000836106bb81856103fe565b156107b457806001600160a01b0316638f4ffcb1338630876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561074357818101518382015260200161072b565b50505050905090810190601f1680156107705780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561079257600080fd5b505af11580156107a6573d6000803e3d6000fd5b5050505060019150506104d3565b509392505050565b600560209081526000928352604080842090915290825290205481565b6001600160a01b0382166107ec57600080fd5b6001600160a01b03831660009081526004602052604090205481111561081157600080fd5b6001600160a01b038216600090815260046020526040902054818101101561083857600080fd5b6001600160a01b038083166000818152600460209081526040808320805495891680855282852080548981039091559486905281548801909155815187815291519390950194927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a36001600160a01b038084166000908152600460205260408082205492871682529020540181146108d657fe5b5050505056fea2646970667358221220b900abe3d1c387b1222dbb36f035df3c0ac86b4ef4ce621ad02b82e38542221a64736f6c634300060c0033",
  "bytecodeSha1": "9e5ba316648a862eaf70102ed8db8c8999546511",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "TokenERC20",
  "coverageMap": {
    "branches": {
      "0": {
        "TokenERC20._transfer": {
          "35": [
            1934,
            1953,
            true
          ],
          "36": [
            2014,
            2040,
            true
          ],
          "37": [
            2090,
            2131,
            true
          ]
        },
        "TokenERC20.approveAndCall": {
          "34": [
            4599,
            4624,
            false
          ]
        },
        "TokenERC20.burn": {
          "31": [
            4996,
            5027,
            true
          ]
        },
        "TokenERC20.burnFrom": {
          "32": [
            5636,
            5662,
            true
          ],
          "33": [
            5739,
            5777,
            true
          ]
        },
        "TokenERC20.transferFrom": {
          "30": [
            3353,
            3391,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "TokenERC20._transfer": {
          "23": [
            1926,
            1954
          ],
          "24": [
            2006,
            2041
          ],
          "25": [
            2082,
            2132
          ],
          "26": [
            2297,
            2323
          ],
          "27": [
            2374,
            2398
          ],
          "28": [
            2408,
            2441
          ],
          "29": [
            2552,
            2613
          ]
        },
        "TokenERC20.approve": {
          "0": [
            3888,
            3928
          ],
          "1": [
            3938,
            3981
          ],
          "2": [
            3991,
            4002
          ]
        },
        "TokenERC20.approveAndCall": {
          "21": [
            4640,
            4710
          ],
          "22": [
            4724,
            4735
          ]
        },
        "TokenERC20.burn": {
          "7": [
            4988,
            5028
          ],
          "8": [
            5074,
            5105
          ],
          "9": [
            5154,
            5175
          ],
          "10": [
            5229,
            5258
          ],
          "11": [
            5268,
            5279
          ]
        },
        "TokenERC20.burnFrom": {
          "12": [
            5628,
            5663
          ],
          "13": [
            5731,
            5778
          ],
          "14": [
            5810,
            5836
          ],
          "15": [
            5908,
            5946
          ],
          "16": [
            6008,
            6029
          ],
          "17": [
            6090,
            6114
          ],
          "18": [
            6124,
            6135
          ]
        },
        "TokenERC20.transfer": {
          "19": [
            2908,
            2942
          ],
          "20": [
            2952,
            2963
          ]
        },
        "TokenERC20.transferFrom": {
          "3": [
            3345,
            3392
          ],
          "4": [
            3425,
            3463
          ],
          "5": [
            3473,
            3502
          ],
          "6": [
            3512,
            3523
          ]
        }
      }
    }
  },
  "dependencies": [
    "tokenRecipient"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461020157806379cc67901461022757806395d89b4114610253578063a9059cbb1461025b578063cae9ca5114610287578063dd62ed3e14610342576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806342966c68146101e4575b600080fd5b6100c1610370565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b0381351690602001356103fe565b604080519115158252519081900360200190f35b61017e610464565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561046a565b6101ce6104da565b6040805160ff9092168252519081900360200190f35b610162600480360360208110156101fa57600080fd5b50356104e3565b61017e6004803603602081101561021757600080fd5b50356001600160a01b031661055b565b6101626004803603604081101561023d57600080fd5b506001600160a01b03813516906020013561056d565b6100c161063e565b6101626004803603604081101561027157600080fd5b506001600160a01b038135169060200135610698565b6101626004803603606081101561029d57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156102cd57600080fd5b8201836020820111156102df57600080fd5b8035906020019184600183028401116401000000008311171561030157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106ae945050505050565b61017e6004803603604081101561035857600080fd5b506001600160a01b03813581169160200135166107bc565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60035481565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561049a57600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020805483900390556104cf8484846107d9565b5060015b9392505050565b60025460ff1681565b336000908152600460205260408120548211156104ff57600080fd5b3360008181526004602090815260409182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b60046020526000908152604090205481565b6001600160a01b03821660009081526004602052604081205482111561059257600080fd5b6001600160a01b03831660009081526005602090815260408083203384529091529020548211156105c257600080fd5b6001600160a01b0383166000818152600460209081526040808320805487900390556005825280832033845282529182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250600192915050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f65780601f106103cb576101008083540402835291602001916103f6565b60006106a53384846107d9565b50600192915050565b6000836106bb81856103fe565b156107b457806001600160a01b0316638f4ffcb1338630876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561074357818101518382015260200161072b565b50505050905090810190601f1680156107705780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561079257600080fd5b505af11580156107a6573d6000803e3d6000fd5b5050505060019150506104d3565b509392505050565b600560209081526000928352604080842090915290825290205481565b6001600160a01b0382166107ec57600080fd5b6001600160a01b03831660009081526004602052604090205481111561081157600080fd5b6001600160a01b038216600090815260046020526040902054818101101561083857600080fd5b6001600160a01b038083166000818152600460209081526040808320805495891680855282852080548981039091559486905281548801909155815187815291519390950194927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a36001600160a01b038084166000908152600460205260408082205492871682529020540181146108d657fe5b5050505056fea2646970667358221220b900abe3d1c387b1222dbb36f035df3c0ac86b4ef4ce621ad02b82e38542221a64736f6c634300060c0033",
  "deployedSourceMap": "170:5974:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3789:220;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3789:220:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;387:26;;;:::i;:::-;;;;;;;;;;;;;;;;3239:291;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3239:291:0;;;;;;;;;;;;;;;;;:::i;283:26::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4918:368;;;;;;;;;;;;;;;;-1:-1:-1;4918:368:0;;:::i;467:45::-;;;;;;;;;;;;;;;;-1:-1:-1;467:45:0;-1:-1:-1;;;;;467:45:0;;:::i;5539:603::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5539:603:0;;;;;;;;:::i;257:20::-;;;:::i;2821:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2821:149:0;;;;;;;;:::i;4397:355::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4397:355:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4397:355:0;;-1:-1:-1;4397:355:0;;-1:-1:-1;;;;;4397:355:0:i;518:66::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;518:66:0;;;;;;;;;;:::i;233:18::-;;;;;;;;;;;;;;;-1:-1:-1;;233:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3789:220::-;3898:10;3864:12;3888:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;3888:31:0;;;;;;;;;;;:40;;;3943:38;;;;;;;3864:12;;3888:31;;3898:10;;3943:38;;;;;;;;-1:-1:-1;3998:4:0;3789:220;;;;:::o;387:26::-;;;;:::o;3239:291::-;-1:-1:-1;;;;;3363:16:0;;3321:12;3363:16;;;:9;:16;;;;;;;;3380:10;3363:28;;;;;;;;3353:38;;;3345:47;;;;;;-1:-1:-1;;;;;3425:16:0;;;;;;:9;:16;;;;;;;;3442:10;3425:28;;;;;;;:38;;;;;;;3473:29;3435:5;3490:3;3457:6;3473:9;:29::i;:::-;-1:-1:-1;3519:4:0;3239:291;;;;;;:::o;283:26::-;;;;;;:::o;4918:368::-;5006:10;4964:12;4996:21;;;:9;:21;;;;;;:31;-1:-1:-1;4996:31:0;4988:40;;;;;;5084:10;5074:21;;;;:9;:21;;;;;;;;;:31;;;;;;;5154:11;:21;;;;;;;5234:24;;;;;;;;;;;;;;;;;-1:-1:-1;5275:4:0;4918:368;;;:::o;467:45::-;;;;;;;;;;;;;:::o;5539:603::-;-1:-1:-1;;;;;5636:16:0;;5604:12;5636:16;;;:9;:16;;;;;;:26;-1:-1:-1;5636:26:0;5628:35;;;;;;-1:-1:-1;;;;;5749:16:0;;;;;;:9;:16;;;;;;;;5766:10;5749:28;;;;;;;;5739:38;;;5731:47;;;;;;-1:-1:-1;;;;;5810:16:0;;;;;;:9;:16;;;;;;;;:26;;;;;;;5908:9;:16;;;;;5925:10;5908:28;;;;;;;;:38;;;;;;;6008:11;:21;;;;;;;6095:19;;;;;;;;;;;;;;;;;-1:-1:-1;6131:4:0;5539:603;;;;:::o;257:20::-;;;;;;;;;;;;;;;-1:-1:-1;;257:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2821:149;2884:12;2908:34;2918:10;2930:3;2935:6;2908:9;:34::i;:::-;-1:-1:-1;2959:4:0;2821:149;;;;:::o;4397:355::-;4512:12;4576:8;4599:25;4576:8;4617:6;4599:7;:25::i;:::-;4595:151;;;4640:7;-1:-1:-1;;;;;4640:23:0;;4664:10;4676:6;4692:4;4699:10;4640:70;;;;;;;;;;;;;-1:-1:-1;;;;;4640:70:0;;;;;;;;;;;-1:-1:-1;;;;;4640:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4731:4;4724:11;;;;;4595:151;4397:355;;;;;;:::o;518:66::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1784:836::-;-1:-1:-1;;;;;1934:19:0;;1926:28;;;;;;-1:-1:-1;;;;;2014:16:0;;;;;;:9;:16;;;;;;:26;-1:-1:-1;2014:26:0;2006:35;;;;;;-1:-1:-1;;;;;2117:14:0;;;;;;:9;:14;;;;;;2090:23;;;:41;;2082:50;;;;;;-1:-1:-1;;;;;2237:14:0;;;2194:21;2237:14;;;:9;:14;;;;;;;;;;2218:16;;;;;;;;;;;2297:26;;;;;;2374:14;;;;:24;;;;;;;2413:28;;;;;;;2218:33;;;;;:16;2413:28;;;;;;;;;;;-1:-1:-1;;;;;2578:14:0;;;;;;;:9;:14;;;;;;;2559:16;;;;;;;;:33;:53;;2552:61;;;;1784:836;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "notice": "Set allowance for other address Allows `_spender` to spend no more than `_value` tokens on your behalf",
        "params": {
          "_spender": "The address authorized to spend",
          "_value": "the max amount they can spend"
        }
      },
      "approveAndCall(address,uint256,bytes)": {
        "notice": "Set allowance for other address and notify Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it",
        "params": {
          "_extraData": "some extra information to send to the approved contract",
          "_spender": "The address authorized to spend",
          "_value": "the max amount they can spend"
        }
      },
      "burn(uint256)": {
        "notice": "Destroy tokens Remove `_value` tokens from the system irreversibly",
        "params": {
          "_value": "the amount of money to burn"
        }
      },
      "burnFrom(address,uint256)": {
        "notice": "Destroy tokens from other account Remove `_value` tokens from the system irreversibly on behalf of `_from`.",
        "params": {
          "_from": "the address of the sender",
          "_value": "the amount of money to burn"
        }
      },
      "transfer(address,uint256)": {
        "notice": "Transfer tokens Send `_value` tokens to `_to` from your account",
        "params": {
          "_to": "The address of the recipient",
          "_value": "the amount to send"
        }
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer tokens from other address Send `_value` tokens to `_to` on behalf of `_from`",
        "params": {
          "_from": "The address of the sender",
          "_to": "The address of the recipient",
          "_value": "the amount to send"
        }
      }
    },
    "version": 1
  },
  "offset": [
    170,
    6144
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x342 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x128 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x46A JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55B JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x56D JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x63E JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x698 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6AE SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x4CF DUP5 DUP5 DUP5 PUSH2 0x7D9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 DUP5 DUP7 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A5 CALLER DUP5 DUP5 PUSH2 0x7D9 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x6BB DUP2 DUP6 PUSH2 0x3FE JUMP JUMPDEST ISZERO PUSH2 0x7B4 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8F4FFCB1 CALLER DUP7 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x743 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x72B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x770 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP PUSH2 0x4D3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 ADD LT ISZERO PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP6 DUP10 AND DUP1 DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD DUP10 DUP2 SUB SWAP1 SWAP2 SSTORE SWAP5 DUP7 SWAP1 MSTORE DUP2 SLOAD DUP9 ADD SWAP1 SWAP2 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP1 SWAP6 ADD SWAP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP8 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD ADD DUP2 EQ PUSH2 0x8D6 JUMPI INVALID JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 STOP 0xAB 0xE3 0xD1 0xC3 DUP8 0xB1 0x22 0x2D 0xBB CALLDATASIZE CREATE CALLDATALOAD 0xDF EXTCODECOPY EXP 0xC8 PUSH12 0x4EF4CE621AD02B82E3854222 BYTE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        170,
        6144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "49": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201"
    },
    "53": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x79CC6790"
    },
    "60": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x227"
    },
    "64": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x253"
    },
    "75": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "86": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCAE9CA51"
    },
    "93": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "97": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x342"
    },
    "108": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "112": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMP",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "135": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "146": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x190"
    },
    "157": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "168": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x42966C68"
    },
    "175": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4"
    },
    "179": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        170,
        6144
      ],
      "op": "REVERT",
      "path": "0"
    },
    "185": {
      "offset": [
        233,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "189": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x370"
    },
    "192": {
      "fn": null,
      "jump": "i",
      "offset": [
        233,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "193": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "196": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "198": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "200": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "204": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "205": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "209": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "215": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "216": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP6",
      "path": "0"
    },
    "220": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "222": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "227": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "228": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "LT",
      "path": "0"
    },
    "231": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "232": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "235": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "236": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "237": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "238": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "239": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "242": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "243": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "244": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "246": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "247": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "250": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "251": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "253": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "254": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "255": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "258": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "259": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "260": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "261": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "264": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "AND",
      "path": "0"
    },
    "265": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "266": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128"
    },
    "270": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "271": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "272": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "273": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SUB",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "275": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "276": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "278": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "281": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SUB",
      "path": "0"
    },
    "282": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "285": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "EXP",
      "path": "0"
    },
    "286": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SUB",
      "path": "0"
    },
    "287": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "NOT",
      "path": "0"
    },
    "288": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "AND",
      "path": "0"
    },
    "289": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "290": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "291": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "293": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "295": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "297": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "298": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "299": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "300": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "302": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "304": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "305": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "306": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "307": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SUB",
      "path": "0"
    },
    "308": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "309": {
      "fn": null,
      "offset": [
        233,
        251
      ],
      "op": "RETURN",
      "path": "0"
    },
    "310": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "311": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "314": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "316": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "DUP1",
      "path": "0"
    },
    "317": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "318": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "SUB",
      "path": "0"
    },
    "319": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "321": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "DUP2",
      "path": "0"
    },
    "322": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "LT",
      "path": "0"
    },
    "323": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "324": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "327": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "328": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "330": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "DUP1",
      "path": "0"
    },
    "331": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "REVERT",
      "path": "0"
    },
    "332": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "333": {
      "op": "POP"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "340": {
      "op": "SHL"
    },
    "341": {
      "op": "SUB"
    },
    "342": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "DUP2",
      "path": "0"
    },
    "343": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "344": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "AND",
      "path": "0"
    },
    "345": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "346": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "348": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "ADD",
      "path": "0"
    },
    "349": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "350": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "353": {
      "fn": "TokenERC20.approve",
      "jump": "i",
      "offset": [
        3789,
        4009
      ],
      "op": "JUMP",
      "path": "0"
    },
    "354": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "355": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "357": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "DUP1",
      "path": "0"
    },
    "358": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "359": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "360": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "361": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "362": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "DUP3",
      "path": "0"
    },
    "363": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "364": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "365": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "366": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "DUP2",
      "path": "0"
    },
    "367": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "368": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "SUB",
      "path": "0"
    },
    "369": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "371": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "ADD",
      "path": "0"
    },
    "372": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "373": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "RETURN",
      "path": "0"
    },
    "374": {
      "offset": [
        387,
        413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "375": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "378": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "381": {
      "fn": "TokenERC20.approve",
      "jump": "i",
      "offset": [
        387,
        413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "382": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "383": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "385": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "386": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "387": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "388": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "DUP3",
      "path": "0"
    },
    "389": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "390": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "391": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "392": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "393": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "394": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "SUB",
      "path": "0"
    },
    "395": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "397": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "ADD",
      "path": "0"
    },
    "398": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "399": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "RETURN",
      "path": "0"
    },
    "400": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "401": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "404": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "406": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "DUP1",
      "path": "0"
    },
    "407": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "408": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "SUB",
      "path": "0"
    },
    "409": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "411": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "412": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "LT",
      "path": "0"
    },
    "413": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "414": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "417": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "418": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "420": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "DUP1",
      "path": "0"
    },
    "421": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "REVERT",
      "path": "0"
    },
    "422": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "423": {
      "op": "POP"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "430": {
      "op": "SHL"
    },
    "431": {
      "op": "SUB"
    },
    "432": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "433": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "434": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "435": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "AND",
      "path": "0"
    },
    "436": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "437": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "439": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "440": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "ADD",
      "path": "0"
    },
    "441": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "442": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "443": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "444": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "AND",
      "path": "0"
    },
    "445": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "446": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "448": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "ADD",
      "path": "0"
    },
    "449": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "450": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46A"
    },
    "453": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        3239,
        3530
      ],
      "op": "JUMP",
      "path": "0"
    },
    "454": {
      "offset": [
        283,
        309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE"
    },
    "458": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DA"
    },
    "461": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        283,
        309
      ],
      "op": "JUMP",
      "path": "0"
    },
    "462": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "463": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "465": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "DUP1",
      "path": "0"
    },
    "466": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "467": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "469": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "470": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "471": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "AND",
      "path": "0"
    },
    "472": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "DUP3",
      "path": "0"
    },
    "473": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "474": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "475": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "476": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "DUP2",
      "path": "0"
    },
    "477": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "478": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "SUB",
      "path": "0"
    },
    "479": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "481": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "ADD",
      "path": "0"
    },
    "482": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "483": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "RETURN",
      "path": "0"
    },
    "484": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "485": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "488": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "490": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "491": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "492": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "SUB",
      "path": "0"
    },
    "493": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "495": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "496": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "LT",
      "path": "0"
    },
    "497": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "498": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA"
    },
    "501": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "502": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "504": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "505": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "506": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "507": {
      "op": "POP"
    },
    "508": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "509": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E3"
    },
    "512": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        4918,
        5286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "513": {
      "offset": [
        467,
        512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "514": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "517": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "519": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "DUP1",
      "path": "0"
    },
    "520": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "521": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "SUB",
      "path": "0"
    },
    "522": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "524": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "525": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "LT",
      "path": "0"
    },
    "526": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "527": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217"
    },
    "530": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "531": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "533": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "DUP1",
      "path": "0"
    },
    "534": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "REVERT",
      "path": "0"
    },
    "535": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "536": {
      "op": "POP"
    },
    "537": {
      "offset": [
        467,
        512
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "544": {
      "op": "SHL"
    },
    "545": {
      "op": "SUB"
    },
    "546": {
      "offset": [
        467,
        512
      ],
      "op": "AND",
      "path": "0"
    },
    "547": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55B"
    },
    "550": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        467,
        512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "551": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "552": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "555": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "557": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "DUP1",
      "path": "0"
    },
    "558": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "559": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "SUB",
      "path": "0"
    },
    "560": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "562": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "DUP2",
      "path": "0"
    },
    "563": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "LT",
      "path": "0"
    },
    "564": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "565": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23D"
    },
    "568": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "569": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "571": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "DUP1",
      "path": "0"
    },
    "572": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "REVERT",
      "path": "0"
    },
    "573": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "574": {
      "op": "POP"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "581": {
      "op": "SHL"
    },
    "582": {
      "op": "SUB"
    },
    "583": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "DUP2",
      "path": "0"
    },
    "584": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "585": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "AND",
      "path": "0"
    },
    "586": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "587": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "589": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "ADD",
      "path": "0"
    },
    "590": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "591": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56D"
    },
    "594": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        5539,
        6142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "595": {
      "offset": [
        257,
        277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "596": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "599": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63E"
    },
    "602": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        257,
        277
      ],
      "op": "JUMP",
      "path": "0"
    },
    "603": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "604": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "607": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "609": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "DUP1",
      "path": "0"
    },
    "610": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "611": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "SUB",
      "path": "0"
    },
    "612": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "614": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "DUP2",
      "path": "0"
    },
    "615": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "LT",
      "path": "0"
    },
    "616": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "617": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "620": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "621": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "623": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "DUP1",
      "path": "0"
    },
    "624": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "REVERT",
      "path": "0"
    },
    "625": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "633": {
      "op": "SHL"
    },
    "634": {
      "op": "SUB"
    },
    "635": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "DUP2",
      "path": "0"
    },
    "636": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "637": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "AND",
      "path": "0"
    },
    "638": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "639": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "641": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "ADD",
      "path": "0"
    },
    "642": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "643": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x698"
    },
    "646": {
      "fn": "TokenERC20.transfer",
      "jump": "i",
      "offset": [
        2821,
        2970
      ],
      "op": "JUMP",
      "path": "0"
    },
    "647": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "648": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "651": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "653": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "654": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "655": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SUB",
      "path": "0"
    },
    "656": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "658": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "659": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "LT",
      "path": "0"
    },
    "660": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "661": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29D"
    },
    "664": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "665": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "667": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "668": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "REVERT",
      "path": "0"
    },
    "669": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "676": {
      "op": "SHL"
    },
    "677": {
      "op": "SUB"
    },
    "678": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP3",
      "path": "0"
    },
    "679": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "680": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "AND",
      "path": "0"
    },
    "681": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "682": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "684": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "685": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "686": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "687": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "688": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "689": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "690": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "691": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "693": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "694": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "695": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "697": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP3",
      "path": "0"
    },
    "698": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "699": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "700": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "706": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "707": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "GT",
      "path": "0"
    },
    "708": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "709": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CD"
    },
    "712": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "713": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "715": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "716": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "REVERT",
      "path": "0"
    },
    "717": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "718": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP3",
      "path": "0"
    },
    "719": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "720": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP4",
      "path": "0"
    },
    "721": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "723": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP3",
      "path": "0"
    },
    "724": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "725": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "GT",
      "path": "0"
    },
    "726": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "727": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DF"
    },
    "730": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "731": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "733": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "734": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "REVERT",
      "path": "0"
    },
    "735": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "736": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "737": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "738": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "739": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "741": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "742": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "743": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP5",
      "path": "0"
    },
    "744": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "746": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP4",
      "path": "0"
    },
    "747": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "MUL",
      "path": "0"
    },
    "748": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP5",
      "path": "0"
    },
    "749": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "750": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "GT",
      "path": "0"
    },
    "751": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "757": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP4",
      "path": "0"
    },
    "758": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "GT",
      "path": "0"
    },
    "759": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "OR",
      "path": "0"
    },
    "760": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "761": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x301"
    },
    "764": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "765": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "767": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "768": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "REVERT",
      "path": "0"
    },
    "769": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "770": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "771": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "772": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "773": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "774": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "776": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "777": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "779": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "780": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "781": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DIV",
      "path": "0"
    },
    "782": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "MUL",
      "path": "0"
    },
    "783": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "785": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "786": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "788": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "789": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "790": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "791": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "792": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "794": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "795": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "796": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "797": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "798": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "799": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "800": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "801": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "802": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "803": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "805": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "806": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP4",
      "path": "0"
    },
    "807": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP4",
      "path": "0"
    },
    "808": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "809": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP3",
      "path": "0"
    },
    "810": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "DUP5",
      "path": "0"
    },
    "811": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "812": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "814": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "815": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "ADD",
      "path": "0"
    },
    "816": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "817": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "818": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "819": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "822": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "823": {
      "op": "POP"
    },
    "824": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AE"
    },
    "827": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "op": "POP"
    },
    "831": {
      "op": "POP"
    },
    "832": {
      "op": "POP"
    },
    "833": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "834": {
      "offset": [
        518,
        584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "835": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "838": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "840": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "DUP1",
      "path": "0"
    },
    "841": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "842": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "SUB",
      "path": "0"
    },
    "843": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "845": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "846": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "LT",
      "path": "0"
    },
    "847": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "848": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "851": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "852": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "854": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "DUP1",
      "path": "0"
    },
    "855": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "REVERT",
      "path": "0"
    },
    "856": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "857": {
      "op": "POP"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "SUB"
    },
    "866": {
      "offset": [
        518,
        584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "867": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "868": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "869": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "AND",
      "path": "0"
    },
    "870": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "871": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "873": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "ADD",
      "path": "0"
    },
    "874": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "875": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "AND",
      "path": "0"
    },
    "876": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BC"
    },
    "879": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        518,
        584
      ],
      "op": "JUMP",
      "path": "0"
    },
    "880": {
      "offset": [
        233,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "881": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "883": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "884": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "885": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "887": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "888": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "889": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "891": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "893": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "895": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP6",
      "path": "0"
    },
    "896": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "AND",
      "path": "0"
    },
    "897": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "898": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "901": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "MUL",
      "path": "0"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "904": {
      "op": "NOT"
    },
    "905": {
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "906": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "907": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "908": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "AND",
      "path": "0"
    },
    "909": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "910": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "911": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "912": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DIV",
      "path": "0"
    },
    "913": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "915": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "916": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "917": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP5",
      "path": "0"
    },
    "918": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "919": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DIV",
      "path": "0"
    },
    "920": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP5",
      "path": "0"
    },
    "921": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "MUL",
      "path": "0"
    },
    "922": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "923": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "924": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP5",
      "path": "0"
    },
    "925": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "926": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "927": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "928": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "929": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "930": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "931": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "932": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "933": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "934": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "935": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "936": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "937": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "938": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "939": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "940": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F6"
    },
    "943": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "944": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "945": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "947": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "LT",
      "path": "0"
    },
    "948": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CB"
    },
    "951": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "952": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "955": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "956": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "957": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "958": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DIV",
      "path": "0"
    },
    "959": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "MUL",
      "path": "0"
    },
    "960": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "961": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "962": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "963": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "965": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "966": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "967": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F6"
    },
    "970": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "971": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "972": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "973": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "974": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "975": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "976": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "978": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "979": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "981": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "983": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "984": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "985": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "986": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "987": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "988": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "989": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "990": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "991": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "993": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "994": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "995": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "997": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "998": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "999": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1000": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "GT",
      "path": "0"
    },
    "1001": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D9"
    },
    "1004": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1005": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1006": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1007": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SUB",
      "path": "0"
    },
    "1008": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1010": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "AND",
      "path": "0"
    },
    "1011": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1012": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "1013": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1014": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1015": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "1016": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "1017": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "1018": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "1019": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "1020": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        233,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1021": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "o",
      "offset": [
        233,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1022": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1023": {
      "fn": "TokenERC20.approve",
      "offset": [
        3898,
        3908
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "1024": {
      "fn": "TokenERC20.approve",
      "offset": [
        3864,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1026": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1027": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1028": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1029": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1031": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1033": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1034": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1035": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1036": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1038": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1039": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1040": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3909
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1047": {
      "op": "SHL"
    },
    "1048": {
      "op": "SUB"
    },
    "1049": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1050": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "AND",
      "path": "0"
    },
    "1051": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1052": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1053": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1054": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1055": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1056": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1057": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1058": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1059": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1060": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3928
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1061": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1062": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3928
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1063": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 1
    },
    "1064": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1065": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1066": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1067": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1068": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1069": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1070": {
      "fn": "TokenERC20.approve",
      "offset": [
        3864,
        3876
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1071": {
      "fn": "TokenERC20.approve",
      "offset": [
        3864,
        3876
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1072": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1073": {
      "fn": "TokenERC20.approve",
      "offset": [
        3888,
        3919
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1074": {
      "fn": "TokenERC20.approve",
      "offset": [
        3898,
        3908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1075": {
      "fn": "TokenERC20.approve",
      "offset": [
        3898,
        3908
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1076": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1109": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1110": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1111": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1112": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "SUB",
      "path": "0"
    },
    "1113": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "ADD",
      "path": "0"
    },
    "1114": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1115": {
      "fn": "TokenERC20.approve",
      "offset": [
        3943,
        3981
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "fn": "TokenERC20.approve",
      "offset": [
        3998,
        4002
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "1119": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1120": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1121": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "POP",
      "path": "0"
    },
    "1122": {
      "fn": "TokenERC20.approve",
      "offset": [
        3789,
        4009
      ],
      "op": "POP",
      "path": "0"
    },
    "1123": {
      "fn": "TokenERC20.approve",
      "jump": "o",
      "offset": [
        3789,
        4009
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1124": {
      "offset": [
        387,
        413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1125": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1127": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1128": {
      "fn": "TokenERC20.approve",
      "offset": [
        387,
        413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1129": {
      "fn": "TokenERC20.approve",
      "jump": "o",
      "offset": [
        387,
        413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1130": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1137": {
      "op": "SHL"
    },
    "1138": {
      "op": "SUB"
    },
    "1139": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 3
    },
    "1140": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "AND",
      "path": "0"
    },
    "1141": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3321,
        3333
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1143": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1144": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1145": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1146": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1148": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1150": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1151": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1152": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1153": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1155": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1156": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1157": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3379
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1158": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3380,
        3390
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1159": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3391
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1160": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3391
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1161": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3391
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1162": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3391
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1163": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3391
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1164": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3391
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1165": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3391
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1166": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3363,
        3391
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1167": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3353,
        3391
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1168": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3353,
        3391
      ],
      "op": "GT",
      "path": "0"
    },
    "1169": {
      "branch": 30,
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3353,
        3391
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1170": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3345,
        3392
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49A"
    },
    "1173": {
      "branch": 30,
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3345,
        3392
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1174": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3345,
        3392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1176": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3345,
        3392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1177": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3345,
        3392
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1178": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3345,
        3392
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1185": {
      "op": "SHL"
    },
    "1186": {
      "op": "SUB"
    },
    "1187": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 4
    },
    "1188": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "AND",
      "path": "0"
    },
    "1189": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1191": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1192": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1193": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1194": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1196": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1198": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1199": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1200": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1201": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1203": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1204": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1205": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3441
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1206": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3442,
        3452
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1207": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3453
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1208": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3453
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1209": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3453
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1210": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3453
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1211": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3453
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1212": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3453
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1213": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3453
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1214": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3463
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1215": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3463
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1216": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3463
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1217": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1218": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3463
      ],
      "op": "SUB",
      "path": "0"
    },
    "1219": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1220": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3425,
        3463
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1221": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3473,
        3502
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x4CF"
    },
    "1224": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3435,
        3440
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1225": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3490,
        3493
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1226": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3457,
        3463
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1227": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3473,
        3482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D9"
    },
    "1230": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        3473,
        3502
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1231": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3473,
        3502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1232": {
      "op": "POP"
    },
    "1233": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3519,
        3523
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "1235": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1236": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1237": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1238": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "POP",
      "path": "0"
    },
    "1239": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "POP",
      "path": "0"
    },
    "1240": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3239,
        3530
      ],
      "op": "POP",
      "path": "0"
    },
    "1241": {
      "fn": "TokenERC20.transferFrom",
      "jump": "o",
      "offset": [
        3239,
        3530
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1242": {
      "offset": [
        283,
        309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1243": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1245": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1246": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1248": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "AND",
      "path": "0"
    },
    "1249": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        283,
        309
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1250": {
      "fn": "TokenERC20.transferFrom",
      "jump": "o",
      "offset": [
        283,
        309
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1251": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1252": {
      "fn": "TokenERC20.burn",
      "offset": [
        5006,
        5016
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "1253": {
      "fn": "TokenERC20.burn",
      "offset": [
        4964,
        4976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1255": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1256": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1257": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5017
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1258": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1260": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1262": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5017
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1263": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1265": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1266": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5017
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1267": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5017
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1268": {
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5027
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1269": {
      "op": "GT"
    },
    "1270": {
      "branch": 31,
      "fn": "TokenERC20.burn",
      "offset": [
        4996,
        5027
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1271": {
      "fn": "TokenERC20.burn",
      "offset": [
        4988,
        5028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FF"
    },
    "1274": {
      "branch": 31,
      "fn": "TokenERC20.burn",
      "offset": [
        4988,
        5028
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1275": {
      "fn": "TokenERC20.burn",
      "offset": [
        4988,
        5028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1277": {
      "fn": "TokenERC20.burn",
      "offset": [
        4988,
        5028
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1278": {
      "fn": "TokenERC20.burn",
      "offset": [
        4988,
        5028
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1279": {
      "fn": "TokenERC20.burn",
      "offset": [
        4988,
        5028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1280": {
      "fn": "TokenERC20.burn",
      "offset": [
        5084,
        5094
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "1281": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1283": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1284": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1285": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1286": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1288": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1290": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1291": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1292": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1293": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1295": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1296": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1297": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1298": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5095
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1299": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5105
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1300": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5105
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1301": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5105
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1302": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1303": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5105
      ],
      "op": "SUB",
      "path": "0"
    },
    "1304": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1305": {
      "fn": "TokenERC20.burn",
      "offset": [
        5074,
        5105
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1306": {
      "fn": "TokenERC20.burn",
      "offset": [
        5154,
        5165
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x3"
    },
    "1308": {
      "fn": "TokenERC20.burn",
      "offset": [
        5154,
        5175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1309": {
      "fn": "TokenERC20.burn",
      "offset": [
        5154,
        5175
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1310": {
      "fn": "TokenERC20.burn",
      "offset": [
        5154,
        5175
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1311": {
      "fn": "TokenERC20.burn",
      "offset": [
        5154,
        5175
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1312": {
      "fn": "TokenERC20.burn",
      "offset": [
        5154,
        5175
      ],
      "op": "SUB",
      "path": "0"
    },
    "1313": {
      "fn": "TokenERC20.burn",
      "offset": [
        5154,
        5175
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1314": {
      "fn": "TokenERC20.burn",
      "offset": [
        5154,
        5175
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1315": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 10
    },
    "1316": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1317": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1318": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1319": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1320": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1321": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1322": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
    },
    "1355": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1356": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1357": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1358": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "SUB",
      "path": "0"
    },
    "1359": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1360": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1361": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "ADD",
      "path": "0"
    },
    "1362": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1363": {
      "fn": "TokenERC20.burn",
      "offset": [
        5234,
        5258
      ],
      "op": "LOG2",
      "path": "0"
    },
    "1364": {
      "op": "POP"
    },
    "1365": {
      "fn": "TokenERC20.burn",
      "offset": [
        5275,
        5279
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "1367": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1368": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1369": {
      "fn": "TokenERC20.burn",
      "offset": [
        4918,
        5286
      ],
      "op": "POP",
      "path": "0"
    },
    "1370": {
      "fn": "TokenERC20.burn",
      "jump": "o",
      "offset": [
        4918,
        5286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1371": {
      "offset": [
        467,
        512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1372": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1374": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1376": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1377": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1379": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1380": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1381": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1382": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1384": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1385": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1386": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1387": {
      "fn": "TokenERC20.burn",
      "offset": [
        467,
        512
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1388": {
      "fn": "TokenERC20.burn",
      "jump": "o",
      "offset": [
        467,
        512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1389": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "op": "SUB"
    },
    "1398": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 12
    },
    "1399": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "AND",
      "path": "0"
    },
    "1400": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5604,
        5616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1402": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1403": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1404": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1405": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1407": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1409": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1410": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1412": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1413": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1414": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5652
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1415": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5662
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1416": {
      "op": "GT"
    },
    "1417": {
      "branch": 32,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5636,
        5662
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1418": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5628,
        5663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x592"
    },
    "1421": {
      "branch": 32,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5628,
        5663
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1422": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5628,
        5663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1424": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5628,
        5663
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1425": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5628,
        5663
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1426": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5628,
        5663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "op": "SUB"
    },
    "1435": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 13
    },
    "1436": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "AND",
      "path": "0"
    },
    "1437": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1439": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1440": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1441": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1442": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1444": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1446": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1447": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1448": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1449": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1451": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1452": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1453": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5765
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1454": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5766,
        5776
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1455": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5777
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1456": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5777
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1457": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1458": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5777
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1459": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5777
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1460": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1461": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5777
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1462": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5749,
        5777
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1463": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5739,
        5777
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1464": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5739,
        5777
      ],
      "op": "GT",
      "path": "0"
    },
    "1465": {
      "branch": 33,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5739,
        5777
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1466": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5731,
        5778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C2"
    },
    "1469": {
      "branch": 33,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5731,
        5778
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1470": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5731,
        5778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1472": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5731,
        5778
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1473": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5731,
        5778
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1474": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5731,
        5778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1481": {
      "op": "SHL"
    },
    "1482": {
      "op": "SUB"
    },
    "1483": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1484": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "AND",
      "path": "0"
    },
    "1485": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1487": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1488": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1489": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1490": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1492": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1494": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1495": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1496": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1497": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1499": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1500": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1501": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5826
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1502": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1503": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5836
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1504": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5836
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1505": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1506": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5836
      ],
      "op": "SUB",
      "path": "0"
    },
    "1507": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1508": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5810,
        5836
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1509": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5917
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x5"
    },
    "1511": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5924
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1512": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5924
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1513": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1514": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5924
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1515": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5924
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1516": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5925,
        5935
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1517": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5936
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1518": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5936
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1519": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5936
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1520": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5936
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1521": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5936
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1522": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5936
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1523": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5936
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1524": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5936
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1525": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5946
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1526": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5946
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1527": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5946
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1528": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5946
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1529": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5946
      ],
      "op": "SUB",
      "path": "0"
    },
    "1530": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5946
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1531": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5908,
        5946
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1532": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6008,
        6019
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x3"
    },
    "1534": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6008,
        6029
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1535": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6008,
        6029
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1536": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6008,
        6029
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1537": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6008,
        6029
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1538": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6008,
        6029
      ],
      "op": "SUB",
      "path": "0"
    },
    "1539": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6008,
        6029
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1540": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6008,
        6029
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1541": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 17
    },
    "1542": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1543": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1544": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1545": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1546": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1547": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1548": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
    },
    "1581": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1582": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1583": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1584": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "SUB",
      "path": "0"
    },
    "1585": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1586": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1587": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "ADD",
      "path": "0"
    },
    "1588": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1589": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6095,
        6114
      ],
      "op": "LOG2",
      "path": "0"
    },
    "1590": {
      "op": "POP"
    },
    "1591": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6131,
        6135
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1"
    },
    "1593": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1594": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1595": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "POP",
      "path": "0"
    },
    "1596": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5539,
        6142
      ],
      "op": "POP",
      "path": "0"
    },
    "1597": {
      "fn": "TokenERC20.burnFrom",
      "jump": "o",
      "offset": [
        5539,
        6142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1598": {
      "offset": [
        257,
        277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1599": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1601": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1602": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1603": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1605": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1606": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1607": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1609": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1611": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1612": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1613": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "AND",
      "path": "0"
    },
    "1614": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1615": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1618": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "MUL",
      "path": "0"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1621": {
      "op": "NOT"
    },
    "1622": {
      "offset": [
        257,
        277
      ],
      "op": "ADD",
      "path": "0"
    },
    "1623": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1624": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1625": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "AND",
      "path": "0"
    },
    "1626": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1627": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1628": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1629": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DIV",
      "path": "0"
    },
    "1630": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1632": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1633": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "ADD",
      "path": "0"
    },
    "1634": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1635": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1636": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DIV",
      "path": "0"
    },
    "1637": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1638": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "MUL",
      "path": "0"
    },
    "1639": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1640": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "ADD",
      "path": "0"
    },
    "1641": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1642": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "ADD",
      "path": "0"
    },
    "1643": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1644": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1645": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1646": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1647": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1648": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1649": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1650": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1651": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1652": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "ADD",
      "path": "0"
    },
    "1653": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1654": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1655": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1656": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1657": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F6"
    },
    "1660": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1661": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1662": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1664": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "LT",
      "path": "0"
    },
    "1665": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CB"
    },
    "1668": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1669": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1672": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1673": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1674": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1675": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DIV",
      "path": "0"
    },
    "1676": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "MUL",
      "path": "0"
    },
    "1677": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1678": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1679": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1680": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1682": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "ADD",
      "path": "0"
    },
    "1683": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1684": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F6"
    },
    "1687": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        257,
        277
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1688": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1689": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2884,
        2896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1691": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2908,
        2942
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x6A5"
    },
    "1694": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2918,
        2928
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1695": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2930,
        2933
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1696": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2935,
        2941
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1697": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2908,
        2917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D9"
    },
    "1700": {
      "fn": "TokenERC20.transfer",
      "jump": "i",
      "offset": [
        2908,
        2942
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1701": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2908,
        2942
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1702": {
      "op": "POP"
    },
    "1703": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2959,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x1"
    },
    "1705": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1706": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1707": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "POP",
      "path": "0"
    },
    "1708": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2821,
        2970
      ],
      "op": "POP",
      "path": "0"
    },
    "1709": {
      "fn": "TokenERC20.transfer",
      "jump": "o",
      "offset": [
        2821,
        2970
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1710": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1711": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4512,
        4524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1713": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4576,
        4584
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1714": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4599,
        4624
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BB"
    },
    "1717": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4576,
        4584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1718": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4617,
        4623
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1719": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4599,
        4606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "1722": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        4599,
        4624
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1723": {
      "branch": 34,
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4599,
        4624
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1724": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4595,
        4746
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1725": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4595,
        4746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B4"
    },
    "1728": {
      "branch": 34,
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4595,
        4746
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1729": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4647
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 21
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "SUB"
    },
    "1738": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4663
      ],
      "op": "AND",
      "path": "0"
    },
    "1739": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4663
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8F4FFCB1"
    },
    "1744": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4664,
        4674
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1745": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4676,
        4682
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1746": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4692,
        4696
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1747": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4699,
        4709
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1748": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1750": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1751": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1752": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1757": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "AND",
      "path": "0"
    },
    "1758": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1760": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SHL",
      "path": "0"
    },
    "1761": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1762": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1763": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1765": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1766": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1767": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1774": {
      "op": "SHL"
    },
    "1775": {
      "op": "SUB"
    },
    "1776": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "AND",
      "path": "0"
    },
    "1777": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1778": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1779": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1781": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1782": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1783": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1784": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1785": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1787": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1788": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "op": "SUB"
    },
    "1797": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "AND",
      "path": "0"
    },
    "1798": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1799": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1800": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1802": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1803": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1804": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1806": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1807": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1808": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1809": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SUB",
      "path": "0"
    },
    "1810": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1811": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1812": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1813": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1814": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1815": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1816": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1817": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1818": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1820": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1821": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1822": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1823": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1824": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1825": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1826": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1828": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1829": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1830": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1831": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1832": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1833": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1835": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1836": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1837": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1838": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "LT",
      "path": "0"
    },
    "1839": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1840": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x743"
    },
    "1843": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1844": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1845": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1846": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1847": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1848": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1849": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1850": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1851": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1852": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1854": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1855": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72B"
    },
    "1858": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1859": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1860": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1861": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1862": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1863": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1864": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1865": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1866": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1867": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1868": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1869": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1870": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1872": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "AND",
      "path": "0"
    },
    "1873": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1874": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1875": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x770"
    },
    "1878": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1879": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1880": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1881": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SUB",
      "path": "0"
    },
    "1882": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1883": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1884": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1886": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1887": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1889": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SUB",
      "path": "0"
    },
    "1890": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1893": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "EXP",
      "path": "0"
    },
    "1894": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SUB",
      "path": "0"
    },
    "1895": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "NOT",
      "path": "0"
    },
    "1896": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "AND",
      "path": "0"
    },
    "1897": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1898": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1899": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1901": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ADD",
      "path": "0"
    },
    "1902": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1903": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1904": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1905": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1906": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1907": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1908": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1909": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1910": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1911": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1912": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1913": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1915": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1917": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1918": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1919": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1920": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "SUB",
      "path": "0"
    },
    "1921": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1922": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1924": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1925": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1926": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1927": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1928": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1929": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1930": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x792"
    },
    "1933": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1934": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1936": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1937": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1938": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1939": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1940": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "GAS",
      "path": "0"
    },
    "1941": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "CALL",
      "path": "0"
    },
    "1942": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1943": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1944": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1945": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A6"
    },
    "1948": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1949": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1950": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1952": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1953": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1954": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1955": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1957": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1958": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1959": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1960": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1961": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1962": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4640,
        4710
      ],
      "op": "POP",
      "path": "0"
    },
    "1963": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4731,
        4735
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x1"
    },
    "1965": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4724,
        4735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1966": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4724,
        4735
      ],
      "op": "POP",
      "path": "0"
    },
    "1967": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4724,
        4735
      ],
      "op": "POP",
      "path": "0"
    },
    "1968": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4724,
        4735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D3"
    },
    "1971": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4724,
        4735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1972": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4595,
        4746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1973": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "POP",
      "path": "0"
    },
    "1974": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1975": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1976": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "POP",
      "path": "0"
    },
    "1977": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "POP",
      "path": "0"
    },
    "1978": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4397,
        4752
      ],
      "op": "POP",
      "path": "0"
    },
    "1979": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "o",
      "offset": [
        4397,
        4752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1980": {
      "offset": [
        518,
        584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1981": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1983": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1985": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1986": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1987": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1988": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1990": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1991": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1992": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1993": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1995": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1996": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1997": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1998": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1999": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2000": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2001": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2002": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2003": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2004": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2005": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2006": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2007": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        518,
        584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2008": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "o",
      "offset": [
        518,
        584
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2009": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1784,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2016": {
      "op": "SHL"
    },
    "2017": {
      "op": "SUB"
    },
    "2018": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1934,
        1953
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 23
    },
    "2019": {
      "branch": 35,
      "fn": "TokenERC20._transfer",
      "offset": [
        1934,
        1953
      ],
      "op": "AND",
      "path": "0"
    },
    "2020": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1926,
        1954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EC"
    },
    "2023": {
      "branch": 35,
      "fn": "TokenERC20._transfer",
      "offset": [
        1926,
        1954
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2024": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1926,
        1954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2026": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1926,
        1954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2027": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1926,
        1954
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2028": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1926,
        1954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "op": "SUB"
    },
    "2037": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 24
    },
    "2038": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "AND",
      "path": "0"
    },
    "2039": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2041": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2042": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2043": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2044": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2046": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2048": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2049": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2051": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2052": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2053": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2030
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2054": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2040
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2055": {
      "op": "GT"
    },
    "2056": {
      "branch": 36,
      "fn": "TokenERC20._transfer",
      "offset": [
        2014,
        2040
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2057": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2006,
        2041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x811"
    },
    "2060": {
      "branch": 36,
      "fn": "TokenERC20._transfer",
      "offset": [
        2006,
        2041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2061": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2006,
        2041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2063": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2006,
        2041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2064": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2006,
        2041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2065": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2006,
        2041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2072": {
      "op": "SHL"
    },
    "2073": {
      "op": "SUB"
    },
    "2074": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 25
    },
    "2075": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "AND",
      "path": "0"
    },
    "2076": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2078": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2079": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2080": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2081": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2083": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2085": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2086": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2088": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2089": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2090": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2117,
        2131
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2091": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2090,
        2113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2092": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2090,
        2113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2093": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2090,
        2113
      ],
      "op": "ADD",
      "path": "0"
    },
    "2094": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2090,
        2131
      ],
      "op": "LT",
      "path": "0"
    },
    "2095": {
      "branch": 37,
      "fn": "TokenERC20._transfer",
      "offset": [
        2090,
        2131
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2096": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2082,
        2132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x838"
    },
    "2099": {
      "branch": 37,
      "fn": "TokenERC20._transfer",
      "offset": [
        2082,
        2132
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2100": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2082,
        2132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2102": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2082,
        2132
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2103": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2082,
        2132
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2104": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2082,
        2132
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2111": {
      "op": "SHL"
    },
    "2112": {
      "op": "SUB"
    },
    "2113": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2114": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2115": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "AND",
      "path": "0"
    },
    "2116": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2194,
        2215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2118": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2119": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2120": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2121": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2123": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2125": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2126": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2127": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2128": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2130": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2131": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2132": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2133": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2134": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2237,
        2251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2135": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2136": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2137": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "AND",
      "path": "0"
    },
    "2138": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2139": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2140": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2141": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2142": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2143": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2144": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2145": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2146": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2297,
        2323
      ],
      "op": "DUP10",
      "path": "0",
      "statement": 26
    },
    "2147": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2297,
        2323
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2148": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2297,
        2323
      ],
      "op": "SUB",
      "path": "0"
    },
    "2149": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2297,
        2323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2150": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2297,
        2323
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2151": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2297,
        2323
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2152": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2388
      ],
      "op": "SWAP5",
      "path": "0",
      "statement": 27
    },
    "2153": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2388
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2154": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2155": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2388
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2156": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2398
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2157": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2398
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2158": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2398
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2159": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2398
      ],
      "op": "ADD",
      "path": "0"
    },
    "2160": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2161": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2398
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2162": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2374,
        2398
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2163": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 28
    },
    "2164": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2165": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2166": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2167": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2168": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2169": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2170": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2251
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2171": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2172": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2251
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2173": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2251
      ],
      "op": "ADD",
      "path": "0"
    },
    "2174": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2251
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2175": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2218,
        2234
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2176": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2209": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2210": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2211": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2212": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2213": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "SUB",
      "path": "0"
    },
    "2214": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2215": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2216": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "ADD",
      "path": "0"
    },
    "2217": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2218": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2413,
        2441
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "SUB"
    },
    "2227": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 29
    },
    "2228": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2229": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "AND",
      "path": "0"
    },
    "2230": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2232": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2233": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2234": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2235": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2587
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2237": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2239": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2240": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2242": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2243": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2244": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2245": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2578,
        2592
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2246": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2575
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2247": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2575
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2248": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2575
      ],
      "op": "AND",
      "path": "0"
    },
    "2249": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2575
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2250": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2575
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2251": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2252": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2575
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2253": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2575
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2254": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2592
      ],
      "op": "ADD",
      "path": "0"
    },
    "2255": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2256": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2559,
        2612
      ],
      "op": "EQ",
      "path": "0"
    },
    "2257": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2552,
        2613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D6"
    },
    "2260": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2552,
        2613
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2261": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2552,
        2613
      ],
      "op": "INVALID",
      "path": "0"
    },
    "2262": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2552,
        2613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2263": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1784,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "2264": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1784,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "2265": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1784,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "2266": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1784,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "2267": {
      "fn": "TokenERC20._transfer",
      "jump": "o",
      "offset": [
        1784,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "acc0b78d89c18b12a8e36231b47477a7e0cba56a",
  "source": "pragma solidity ^0.6.0;\n\ninterface tokenRecipient { \n    function receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData) external; \n}\n\ncontract TokenERC20 {\n    // Public variables of the token\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n    // 18 decimals is the strongly suggested default, avoid changing it\n    uint256 public totalSupply;\n\n    // This creates an array with all balances\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    // This generates a public event on the blockchain that will notify clients\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    \n    // This generates a public event on the blockchain that will notify clients\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    // This notifies clients about the amount burnt\n    event Burn(address indexed from, uint256 value);\n\n    /**\n     * Constructor function\n     *\n     * Initializes contract with initial supply tokens to the creator of the contract\n     */\n    constructor(\n        uint256 initialSupply,\n        string memory tokenName,\n        string memory tokenSymbol\n    ) public {\n        totalSupply = initialSupply * 10 ** uint256(decimals);  // Update total supply with the decimal amount\n        balanceOf[msg.sender] = totalSupply;                // Give the creator all initial tokens\n        name = tokenName;                                   // Set the name for display purposes\n        symbol = tokenSymbol;                               // Set the symbol for display purposes\n    }\n\n    /**\n     * Internal transfer, only can be called by this contract\n     */\n    function _transfer(address _from, address _to, uint _value) internal {\n        // Prevent transfer to 0x0 address. Use burn() instead\n        require(_to != address(0x0));\n        // Check if the sender has enough\n        require(balanceOf[_from] >= _value);\n        // Check for overflows\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        // Save this for an assertion in the future\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        // Subtract from the sender\n        balanceOf[_from] -= _value;\n        // Add the same to the recipient\n        balanceOf[_to] += _value;\n        emit Transfer(_from, _to, _value);\n        // Asserts are used to use static analysis to find bugs in your code. They should never fail\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n\n    /**\n     * Transfer tokens\n     *\n     * Send `_value` tokens to `_to` from your account\n     *\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n     * Transfer tokens from other address\n     *\n     * Send `_value` tokens to `_to` on behalf of `_from`\n     *\n     * @param _from The address of the sender\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * Set allowance for other address\n     *\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     */\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * Set allowance for other address and notify\n     *\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     * @param _extraData some extra information to send to the approved contract\n     */\n    function approveAndCall(address _spender, uint256 _value, bytes memory _extraData)\n        public\n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, address(this), _extraData);\n            return true;\n        }\n    }\n\n    /**\n     * Destroy tokens\n     *\n     * Remove `_value` tokens from the system irreversibly\n     *\n     * @param _value the amount of money to burn\n     */\n    function burn(uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough\n        balanceOf[msg.sender] -= _value;            // Subtract from the sender\n        totalSupply -= _value;                      // Updates totalSupply\n        emit Burn(msg.sender, _value);\n        return true;\n    }\n\n    /**\n     * Destroy tokens from other account\n     *\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n     *\n     * @param _from the address of the sender\n     * @param _value the amount of money to burn\n     */\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);                // Check if the targeted balance is enough\n        require(_value <= allowance[_from][msg.sender]);    // Check allowance\n        balanceOf[_from] -= _value;                         // Subtract from the targeted balance\n        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance\n        totalSupply -= _value;                              // Update totalSupply\n        emit Burn(_from, _value);\n        return true;\n    }\n}",
  "sourceMap": "170:5974:0:-:0;;;283:26;;;-1:-1:-1;;283:26:0;307:2;283:26;;;1163:537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1163:537:0;;;;;;;;;;-1:-1:-1;1163:537:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1163:537:0;;;;;;;;;;-1:-1:-1;1163:537:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1163:537:0;;;;1341:8;;;;1327:2;:23;1311:39;;1297:11;:53;;;1418:10;1341:8;1408:21;;;:9;:21;;;;;;;:35;;;;1507:16;;;;-1:-1:-1;1341:8:0;;-1:-1:-1;1507:16:0;;;;-1:-1:-1;1507:16:0;:::i;:::-;-1:-1:-1;1604:20:0;;;;:6;;:20;;;;;:::i;:::-;;1163:537;;;170:5974;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;170:5974:0;;;-1:-1:-1;170:5974:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/TokenERC.sol",
  "type": "contract"
}